[tool.poetry]
name = "algostack"
version = "0.1.0"
description = "Disciplined multi-strategy algorithmic trading stack"
authors = ["AlgoStack Team"]
readme = "README.md"
packages = [{include = "algostack"}]

[tool.poetry.dependencies]
python = "^3.10"
pandas = "^2.0.0"
numpy = "^1.24.0"
scipy = "^1.10.0"
yfinance = "^0.2.28"
requests = "^2.31.0"
ccxt = "^4.0.0"
TA-Lib = "^0.4.28"
statsmodels = "^0.14.0"
backtrader = "^1.9.78.123"
ib-insync = "^0.9.86"
robin-stocks = "^3.0.8"
pydantic = "^2.0.0"
PyYAML = "^6.0"
apscheduler = "^3.10.0"
fastapi = "^0.103.0"
uvicorn = "^0.23.0"
sqlalchemy = "^2.0.0"
psycopg2-binary = "^2.9.0"
prometheus-client = "^0.17.0"
alpha-vantage = "^2.3.1"
pyarrow = "^14.0.0"
click = "^8.1.0"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.0"
pytest-asyncio = "^0.21.0"
pytest-cov = "^4.1.0"
hypothesis = "^6.82.0"
black = "^23.7.0"
ruff = "^0.0.287"
mypy = "^1.5.0"
matplotlib = "^3.7.0"
seaborn = "^0.12.0"
plotly = "^5.16.0"

[tool.poetry.group.optional.dependencies]
matplotlib = "^3.7.0"
seaborn = "^0.12.0"
plotly = "^5.16.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py310']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | node_modules
)/
'''

[tool.ruff]
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP", # pyupgrade
]
ignore = [
    "E501", # line too long, handled by black
    "B008", # do not perform function calls in argument defaults
    "C901", # too complex
]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = "test_*.py"
markers = [
    "asyncio: mark test as async",
    "slow: mark test as slow",
    "integration: mark test as integration test",
    "unit: mark test as unit test"
]

[tool.coverage.run]
source = ["algostack"]
branch = true

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
fail_under = 80